include "../std/image.t++"
include "../std/std.t++"

include "camera.t++"
include "color.t++"
include "common.t++"
include "hittable.t++"
include "hittable_list.t++"
include "interval.t++"
include "ray.t++"
include "sphere.t++"
include "vec3.t++"

def i32 main(i32 argc, [[i8]] argv) = (

    def hittable_list world

    def lambertian material_ground = {{0.8, 0.8, 0.0}}
    def lambertian material_center = {{0.1, 0.2, 0.5}}
    def metal material_left        = {{0.8, 0.8, 0.8}}
    def metal material_right       = {{0.8, 0.6, 0.2}}

    hittable_list:add(world, sphere:new({ 0.0, -100.5, -1.0}, 100.0, material_ground))
    hittable_list:add(world, sphere:new({ 0.0,    0.0, -1.2},   0.5, material_center))
    hittable_list:add(world, sphere:new({-1.0,    0.0, -1.0},   0.5,   material_left))
    hittable_list:add(world, sphere:new({ 1.0,    0.0, -1.0},   0.5,  material_right))

    def camera cam
    cam.aspect_ratio      = 16.0 / 9.0
    cam.image_width       = 400
    cam.samples_per_pixel = 100
    cam.max_depth         = 50
    camera:render(cam, world)

    0
)
