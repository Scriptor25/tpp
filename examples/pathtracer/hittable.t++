include "vec3.t++"

struct hit_record {
    vec3 p,
    vec3 normal,
    f64 t,
    i1 front_face,
    material mat
}

:hit_record
def hit_record new() = {}

def set_face_normal(hit_record self, ray r, vec3 outward_normal) = (
    self.front_face = vec3:dot(r.direction, outward_normal) < 0
    self.normal = if [self.front_face] outward_normal else vec3:neg(outward_normal)
)
:hit_record

struct sphere {}
struct hittable_list {}

def i1 sphere:hit(sphere self, ray r, interval ray_t, hit_record rec)
def i1 hittable_list:hit(hittable_list self, ray r, interval ray_t, hit_record rec)

struct hittable

:hittable
def i1 hit(hittable self, ray r, interval ray_t, hit_record rec) = (
    if [self ? sphere] -> sphere:hit(self, r, ray_t, rec)
    if [self ? hittable_list] -> hittable_list:hit(self, r, ray_t, rec)
    0
)
:hittable
